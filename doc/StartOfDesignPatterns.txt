Design Patterns Used
MVC Pattern
We used the model view controller pattern as the basis for our game. The controller contains the engine class, the model contain all of the classes
used to run the game, and the view contains the GameWindow class, which draws the game on the screen.

Factory- Pokeman
The Trainer class is a factory for the Pokeman abstract class. When the Trainer encounters a pokemon, 
the Trainer calls for a Pokeman to be created, based on which map the Trainer is on and what random number is generated.

State- Trainer
The Trainer class implements a state pattern. The trainer checks which map it is on and changes its pokemon spawn chances based on the map number.

Builder Pattern- Engine 
The engine class is a builder pattern. It generates the trainer, map, battle, sprite loader, and menus, and puts them all together into what is displayed on the gameview.

Iterator- Trainer + AchievementMenu
Iterators check whether the trainer has a specific Pokeman or a specific item when determining if an achievment has been unlocked

Visitor- GameMenu
The various menus change the functionality and algorithms of the GameMenu class
